{"name":"gimuby","downloads":16636,"version":"0.8.0","version_created_at":"2015-06-25T16:28:43.281Z","version_downloads":8244,"platform":"ruby","authors":"Frantz Miccoli","info":"Implemented for academic purpose, Gimuby is also suitable for teaching purpose. As far as we know this implementation of genetic algorithms is the most advanced available in Ruby for itintegrates an implementation of the island model, reusable patterns for user problem composition and optimal configuration genetic algorithm\nGimuby contains the implementation of standard genetic algorithm (named population) and distributed genetic algorithm or island model (named archipelago).\nThe presented archipelago are NOT distributed (nor with threads, processes, or physical machines). However they let the user benefits ofthe leverage they represent to obtain a better solution with the same amount of resources spent.\nSimilar to: AI4R, gga4r and darwinning","licenses":["MIT"],"metadata":{},"yanked":false,"sha":"968f248b4a5e356d2bbff1849ba842c00440dbfd981ab37b09dedf7f8963f322","spec_sha":"084ac7e6a268a21c517e6f765713013414ecf6c5c0238c6bfa652efaec7f121d","project_uri":"https://rubygems.org/gems/gimuby","gem_uri":"https://rubygems.org/gems/gimuby-0.8.0.gem","homepage_uri":"https://frantzmiccoli.github.io/Gimuby","wiki_uri":"","documentation_uri":"http://frantzmiccoli.github.io/Gimuby/","mailing_list_uri":"","source_code_uri":"https://github.com/frantzmiccoli/Gimuby","bug_tracker_uri":"https://github.com/frantzmiccoli/Gimuby/issues","changelog_uri":null,"funding_uri":null,"dependencies":{"development":[],"runtime":[]}}